{"version":3,"sources":["components/Search.js","components/Persons.js","components/FilterNames.js","services/persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","type","onChange","handleSearch","Persons","id","onSubmit","handleSubmit","value","newName","handleName","handleNumber","FilterNames","arr","filter","n","name","toLowerCase","includes","str","map","number","onClick","e","handleDelete","baseUrl","axios","get","newObject","post","console","log","delete","put","Notification","message","className","App","useState","persons","setPersons","useEffect","personService","then","response","data","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","setMessage","target","find","forEach","alert","found","updatedPerson","setTimeout","concat","newPerson","catch","error","preventDefault","person","window","confirm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27291ece.chunk.js","sourcesContent":["const Search = (props) => {\r\n    return (\r\n        <form>\r\n          <div>\r\n            <label>filter shown with</label>\r\n            <input \r\n              type=\"text\" \r\n              onChange={props.handleSearch}\r\n            />\r\n          </div>\r\n        </form>\r\n    )\r\n}\r\nexport default Search","const Persons = (props) => {\r\n\r\n    return (\r\n        <form id=\"add\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label>name: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={props.newName}\r\n                    onChange={props.handleName}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>number: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={props.handleNumber}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Persons","const FilterNames = (props) => {\r\n    return (\r\n        props.arr.filter(n => n.name.toLowerCase().includes(props.str.toLowerCase()))\r\n            .map(n => <div>{n.name} {n.number} <button onClick={(e) => props.handleDelete(e, n)}>Del</button></div>)\r\n        \r\n    )\r\n}\r\n\r\nexport default FilterNames","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst remove = id => {\r\n  console.log(baseUrl + '/' + id)\r\n  return axios.delete(baseUrl + '/' + id)  \r\n} \r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(baseUrl+ '/' + id, newObject)\r\n}\r\n\r\nexport default { \r\n    getAll: getAll, \r\n    create: create,\r\n    remove: remove,\r\n    update: update\r\n}","const Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='notif'>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Search from \"./components/Search\"\nimport Persons from \"./components/Persons\"\nimport FilterNames from \"./components/FilterNames\"\nimport personService from './services/persons.js'\nimport Notification from \"./components/Notification\"\nimport \"./index.css\"\nimport { set } from 'mongoose'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const [ newName, setNewName ] = useState('')\n\n  const [ newNumber, setNewNumber ] = useState('')\n\n  const [newSearch, setNewSearch ] = useState('')\n\n  const [ message, setMessage ] = useState('')\n\n\n  const handleName = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumber = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleSearch = (e) => {\n    setNewSearch(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    const person = persons.find((n) => n.name === newName)\n\n    persons.forEach(n => console.log(n))\n\n    if(persons.map(n => n.name).includes(newName) && persons.map(n => n.number).includes(newNumber)) {\n      alert(`${newName} is already added to phonebook`)\n    }\n    else if(persons.map(n => n.name).includes(newName)) {\n      const found = persons.filter(n => n.name == newName)[0]\n      const updatedPerson = {name: newName, number: newNumber, id: found.id}\n      setMessage(\"Updated \" + updatedPerson.name)\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n\n      setPersons(persons.filter(n => n.id != found.id).concat(updatedPerson))      \n\n      personService\n        .update(found.id, updatedPerson)\n        .then(console.log(updatedPerson))\n    }\n    \n    else {\n      const newPerson = {name: newName, number: newNumber}      \n      \n      personService\n        .create(newPerson)\n        .then(response => {\n          setMessage(\"Added \" + newPerson.name)\n          setPersons(persons.concat(newPerson))\n        })\n        .catch(error => {\n          setMessage(error.response.data.error)\n          console.log(error.response.data.error)\n        })\n\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n    }\n    e.preventDefault()\n  }\n\n  const handleDelete = (e, person) => {\n    \n    const confirmed = window.confirm(\"Delete \" + person.name + \" ?\")\n\n      if(confirmed) {\n        personService\n          .remove(person.id)\n          .then(response => {\n          })\n        setPersons(persons.filter(n => n.id !== person.id))\n        setMessage(\"Deleted \" + person.name)\n        setTimeout(() => {\n  \n          setMessage(null)\n        }, 3000)\n      }\n      e.preventDefault()\n\n  }\n\n  return (\n    <div>\n      <Notification message={message}/>\n      <h2>Phonebook</h2>\n        <Search handleSearch={handleSearch}/>\n      <h2>add a new</h2>\n        <Persons handleName={handleName} handleNumber={handleNumber} handleSubmit={handleSubmit}/>\n      <h2>Numbers</h2>\n        <FilterNames arr={persons} str={newSearch} handleDelete={handleDelete}/>\n    </div>\n  )\n  \n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}